continue
self
tag_list
continue
next
Tagging.all
tag_list
c
continue
exit
continue
arr2
continue
self
continue
arr2
continue
self
arr2
continue
card.errors
exit
COLOR_DICT[c[0].to_sym]
COLOR_DICT[c[0]]
COLOR_DICT[c]
COLOR_DICT
c[0]
c = color[0].scan(/\w/)
a
a[COLOR_DICT[color[0].scan(/\w/)[0]]] = true
a = {}
color[0].scan(/\w/)
color[0].match(/\w/)
color.match(/\w/)
color.match(/\W/)
color[0]
color
exit
continue
exit
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
continue
self.can_be_commander
exit
continue
exit
continue
params
continue
params
continue
params[:user]
params
continue
next
user
next
params
exit
continue
params
continue
next
user
continue
user
continue
user
continue
User.all
user.errors.messages
user.errors
user.save
user
exit
User.all
User
user
exit
User.create(username: "me", password:"mememe", email: "me@me.me")
User.create(username: "me", password:"mememe", email: "me@me.me)
exit
      email: "me@me.me"
      password: "mememe",
      username: "me",
User.create({User.create({
user
User.all
User.find_by(username: "me")
password
email_or_username
user
